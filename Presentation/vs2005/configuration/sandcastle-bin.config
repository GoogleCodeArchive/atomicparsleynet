<configuration>
  <dduetools>
    <builder>
      <components>

        <!-- Create skeleton document -->
        <component type="Microsoft.Ddue.Tools.CopyFromFileComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <data file="%DXROOT%\Presentation\vs2005\Transforms\skeleton.xml" />
          <copy source="/*" target="/" />
        </component>

        <!-- Copy in reflection data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <index name="reflection" value="/reflection/apis/api" key="@id" cache="10">
            <data base="%DXROOT%\Data\Reflection" recurse="true" files="*.xml" />
            <data files="%reflectionfile%" />
          </index>
          <copy name="reflection" source="*" target="/document/reference" />
        </component>

        <!-- Copy in container data -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="reflection" key="string(/document/reference/containers/namespace/@api)" source="*[not(local-name()='elements')]" target="/document/reference/containers/namespace" />
        </component>
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/containers//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata|typedata|templates|attributes" target="/document/reference/containers//type[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- Copy in templates type reflection data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/templates//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata" target="/document/reference/templates//type[@api=$key]" />
              <copy name="reflection" source="templates" target="/document/reference/templates//type[@api=$key and not(specialization)]" />
            </component>
          </components>
        </component>

        <!-- Copy in return type reflection data -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/returns//type/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="reflection" source="apidata|typedata|family|templates|containers|attributes" target="/document/reference/returns//type[@api=$key]" />
            </component>
          </components>
        </component>

        <!-- Copy in comments -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <index name="comments" value="/doc/members/member" key="@name" cache="100">
            <data base="%SystemRoot%\Microsoft.NET\Framework\v4.0.30319" recurse="false"  files="*.xml" />
            <data base="%ReferenceAssemblies%\Microsoft\Framework\.NETFramework\v4.0" recurse="false"  files="*.xml" />
            <data files="%CommentsDir%\*.xml" />
          </index>
          <copy name="comments" key="substring-after($key,'Bin.')" source="*" target="/document/comments" />
          <components>
            <!-- copy comments for inheritdoc -->
            <component type="Microsoft.Ddue.Tools.InheritDocumentationComponent" assembly="%DXROOT%\ProductionTools\CopyComponents.dll">
              <copy name="comments" use="reflection"/>
            </component>
          </components>
        </component>

        <!-- Copy in reflection data and comments for members -->
        <component type="Microsoft.Ddue.Tools.ForEachComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <variable expression="/document/reference/elements//element/@api" />
          <components>
            <component type="Microsoft.Ddue.Tools.IfThenComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <if condition="not(/document/reference/elements//element[@api=$key]/apidata)" />
              <then>
                <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
                  <copy name="reflection" source="*[not(self::elements)]" target="/document/reference/elements//element[@api=$key]" />
                </component>
              </then>
            </component>
            <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
              <copy name="comments" key="substring-after($key,'Bin.')" source="summary|inheritdoc" target="/document/reference/elements//element[@api=$key]" />
              <components>
                <!-- copy comments for inheritdoc -->
                <component type="Microsoft.Ddue.Tools.InheritDocumentationComponent" assembly="%DXROOT%\ProductionTools\CopyComponents.dll">
                  <copy name="comments" use="reflection"/>
                </component>
              </components>
            </component>
          </components>
        </component>

        <!-- Copy in comments for the member's declaring type. -->
        <component type="Microsoft.Ddue.Tools.CopyFromIndexComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <copy name="comments" key="string(/document/reference/containers/type/@api)" source="summary" target="/document/reference/containers/type" />
        </component>

        <!-- transform -->
        <component type="Microsoft.Ddue.Tools.TransformComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <transform file="%DXROOT%\Presentation\vs2005\Transforms\bin_sandcastle.xsl">
            <argument key="metadata" value="true" />
            <argument key="languages" />
          </transform>
        </component>

        <!-- resolve shared content -->
        <component type="Microsoft.Ddue.Tools.SharedContentComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <content file="%DXROOT%\Presentation\vs2005\content\shared_content.xml" />
          <content file="%DXROOT%\Presentation\shared\content\syntax_content.xml" />
          <content file="%DXROOT%\Presentation\vs2005\content\bin_content.xml" />
        </component>


        <!-- resolve reference links -->
        <component type="Microsoft.Ddue.Tools.ResolveReferenceLinksComponent2" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <targets base="%DXROOT%\Data\Reflection" recurse="true" files="*.xml" type="msdn" />
          <targets files="%reflectionfile%" type="local" />
        </component>

        <!-- save the result -->
        <component type="Microsoft.Ddue.Tools.SaveComponent" assembly="%DXROOT%\ProductionTools\BuildComponents.dll">
          <save base="%OutputDir%" path="concat(/html/head/meta[@name='file']/@content,'.htm')" indent="true" omit-xml-declaration="true" />
        </component>

      </components>
    </builder>
  </dduetools>
</configuration>
